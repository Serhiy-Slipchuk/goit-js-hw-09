{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAEhCC,EAAe,CACnBC,MAAO,EACPC,KAAM,EACNC,OAAQ,GA6CV,SAASC,EAAcC,EAAUJ,GAY/B,OAXgB,IAAIK,SAAQ,SAACC,EAASC,GACxCC,YAAW,WACeC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAwCK,OAAfP,EAAS,QAAYO,OAANX,EAAM,OAEpDO,EAAK,sBAAqCI,OAAfP,EAAS,QAAYO,OAANX,EAAM,M,GAEnDA,E,IAnDLJ,EAAOgB,iBAAiB,SAIxB,SAAsBC,GACpB,IAAIC,EAAYD,EAAME,OAAOC,KACzBC,EAAaJ,EAAME,OAAOG,OAYhC,SAA4BF,EAAME,GACnB,UAATF,IACFjB,EAAaC,MAAQmB,OAAOD,IAEjB,SAATF,IACFjB,EAAaE,KAAOkB,OAAOD,IAEhB,WAATF,IACFjB,EAAaG,OAASiB,OAAOD,G,CAnB/BE,CAAmBN,EAAWG,E,IANhCrB,EAAOgB,iBAAiB,SASxB,SAAsBC,GAEpB,GADAA,EAAMQ,iBACwB,WAA1BR,EAAME,OAAOO,SACf,OAiBqBC,EAfPxB,EAeSC,EAAFuB,EAAEvB,MAAOC,EAATsB,EAAStB,KAAMC,EAAfqB,EAAerB,OACtCM,YAAW,WACT,IAAK,IAAIgB,EAAI,EAAGA,GAAKtB,EAAQsB,IAC3BrB,EAAcqB,EAAGxB,GACdyB,MAAK,SAAAnB,G,OAAWoB,EAAAhC,GAASiC,OAAOC,QAAQtB,E,IACxCuB,OAAM,SAAAtB,G,OAAUmB,EAAAhC,GAASiC,OAAOG,QAAQvB,E,IAC3CP,GAAgBC,C,GAEjBD,GARL,IAAyBuB,EAAEvB,EAAOC,EAAMC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst formEl = document.querySelector('.form');\n\nconst incomingData = {\n  delay: 0,\n  step: 0,\n  amount: 0,\n}\n\nformEl.addEventListener('input', handlerInput);\nformEl.addEventListener('click', handlerClick);\n\n\nfunction handlerInput(event) {\n  let inputName = event.target.name;\n  let inputValue = event.target.value;\n  updateIncomingData(inputName, inputValue);\n}\n\nfunction handlerClick(event) {\n  event.preventDefault();\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  };\n  displayPromises(incomingData);\n}\n\nfunction updateIncomingData(name, value) {\n  if (name === 'delay') {\n    incomingData.delay = Number(value);\n  };\n  if (name === 'step') {\n    incomingData.step = Number(value);\n  };\n  if (name === 'amount') {\n    incomingData.amount = Number(value);\n  };\n}\n\nfunction displayPromises({ delay, step, amount }) {\n  setTimeout(() => {\n    for (let i = 1; i <= amount; i++) {\n      createPromise(i, delay)\n        .then(resolve => Notiflix.Notify.success(resolve))\n        .catch(reject => Notiflix.Notify.failure(reject));\n      delay = delay + step;\n    };\n  }, delay);\n  \n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\nsetTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$incomingData","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","concat","addEventListener","event","inputName","target","name","inputValue","value","Number","$ce04d3a99e08e73b$var$updateIncomingData","preventDefault","nodeName","param","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.26f78399.js.map"}